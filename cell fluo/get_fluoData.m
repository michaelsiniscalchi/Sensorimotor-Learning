%%% get_sessionFluoData()
%
% PURPOSE: Fetch stack and ROIs selected using cellROI.m, 
%           along with optional neuropil masks.
%
% AUTHOR: MJ Siniscalchi, 190507
%
% INPUT ARGS: 
%           char 'roi_path', the path to a directory containing all ROI files,
%               as well as the MAT file 'roiData.mat'. All files generated
%               using the GUI, cellROI.m.
%           cell 'tiff_path', paths to registered stack(s) OR 
%           char 'tiff_path', paths to one registered stack. 
%           Note: 'tiff_path' can be set to [] if data are already stored in matfiles.
%        
%           cell 'mat_path', path(s) to matfiles containing 'stack', a
%               numeric array of imaging data (nX x nY x nFrames).
%
% OUTPUTS: double 'stack', the full time-lapse image stack, OR
%         struct 'stack', containing paths to MAT files 
%               containing substacks and other info
%         struct 'cells' containing these fields:           
%           'cellMasks', an X x Y x nROIs logical array containing the logical indices for each ROI.
%           'subtractMasks', the same for each neuropil mask, if desired. 
%           'cellIDs', an array of character vectors corresponding to 
%               the cell IDs from cellROI; also found in the filenames.
%
%--------------------------------------------------------------------------
     
function [ stack, cells ] = get_fluoData( roi_path, reg_path, mat_path, stack_info )

if nargin<3
    mat_path = [];
    if nargin<2 
        reg_path = []; 
    end
end

%% Get 'stack': registered image stack or paths to series of stacks

%Header information from stack_info.mat
stack.info = stack_info;
mat_path = mat_path(1:numel(stack_info.trigDelay)); %Truncate if necessary; 'trigDelay' contains appropriate number of elements after call to 'get_combinedData.m'

%Get numeric array and path to MAT file(s)
if isempty(reg_path)    %If matfiles already saved, and 'registered' dir empty/deleted or programmatically assigned '[]'
    stack.path = mat_path;
    warning(['Using saved MAT files. No new MAT files generated for ' fileparts(fileparts(mat_path{1})) '.']);
else %Data in batch of individual stacks ***FUTURE: use function extractSubstacks.m
    disp(['Converting ' num2str(numel(reg_path)) ' .TIF files to .MAT...']);
    %Create directory for registered MAT files
    create_dirs(fileparts(mat_path{1}));
    %Store stacks as MAT files
    stack.info.tags = tiff2mat(reg_path, mat_path);
    stack.path = mat_path;
end

%% Populate structure with data from ROI files generated by cellROI.m
fileList = dir(fullfile(roi_path,'*cell*.mat'));
fileIDs = {};
for j = 1:numel(fileList)
    S = load(fullfile(roi_path, fileList(j).name));
    cells.cellMask{j} = S.bw;
    cells.cellID{j} = num2str(fileList(j).name(end-6:end-4));
    if isfield(S,'subtractmask')
        cells.npMask{j} = S.subtractmask;
    else
        cells.npMask{j} = false(size(S.bw));
        fileIDs{numel(fileIDs)+1} = fileList(j).name(end-6:end-4);
    end
    cells.exclude(j) = isempty(S.cellf); %Exclusion masks generated by 'cellROI.m' are coded with cellf = [].
end

if ~isempty(fileIDs)
    warning('on'); warning('backtrace','off');
    warning('No neuropil masks found in the following files:');
    disp(fileIDs');
end