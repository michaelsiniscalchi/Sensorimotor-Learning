%%% get_sessionFluoData
%
%PURPOSE: Fetch stack and ROIs selected using cellROI.m, 
%           along with optional neuropil masks.
%
%AUTHOR: MJ Siniscalchi, 190507
%
%INPUT ARGS: char 'roi_path', the path to a directory containing all ROI files,
%               as well as the MAT file 'roiData.mat'. All files generated
%               using the GUI, cellROI.m.
%
%OUTPUTS: double 'stack', the full time-lapse image stack.
%         struct 'cells' containing these fields:           
%           'cellMasks', an X x Y x nROIs logical array containing the logical indices for each ROI.
%           'subtractMasks', the same for each neuropil mask, if desired. 
%           'cellIDs', an array of character vectors corresponding to 
%               the cell IDs from cellROI; also found in the filenames.
%
%**FUTURE EDIT: 'stack' can be a cell array of partial stacks to accomodate resonant scanning...    
%
%--------------------------------------------------------------------------
     
function [ stack, cells ] = get_sessionFluoData_batch( roi_path, tiff_path, mat_path )

if nargin<3
    mat_path = [];
    if nargin<2 
        tiff_path = []; 
    end
end

%Populate structure with data from ROI files generated by cellROI.m
fileList = dir(fullfile(roi_path,'*cell*.mat'));
fileIDs = {};
for j = 1:numel(fileList)
    S = load(fullfile(roi_path, fileList(j).name));
    cells.roimask{j} = S.bw;
    cells.cellf{j} = S.cellf;
    cells.cellID{j} = num2str(fileList(j).name(end-6:end-4));
    if isfield(S,'subtractmask')
        cells.subtractmask{j} = S.subtractmask;
    else
        cells.subtractmask{j} = false(size(cells.roimask{j}));
        fileIDs{numel(fileIDs)+1} = num2str(fileList(j).name(end-6:end-4));
    end
end

%Get 'stack': registered image stack or paths to series of stacks
if isempty(tiff_path) %Data are in one stack
    S = load(fullfile(roi_path,'roiData.mat'),'pathname','filename');
    disp(['Loading ' S.pathname S.filename '...']);
    stack = double(loadtiffseq(S.pathname,S.filename)); 
elseif isempty(mat_path) && ~iscell(tiff_path) %Location of TIFF specified as input arg
    disp(['Loading ' tiff_path '...']);
    [path,fname,ext] = fileparts(tiff_path);
    stack = double(loadtiffseq(path,[fname ext])); 
else %Data in batch of individual stacks
    disp(['Converting ' num2str(numel(tiff_path)) ' .TIF files to .MAT...']);
    %Store stacks as MAT files
    stack.info = tiff2mat(tiff_path, mat_path);
    stack.path = mat_path;
end

if ~isempty(fileIDs)
    disp('Warning: No neuropil masks found in the following files:');
    disp(fileIDs');
end