%%% analyze_DiscrimSession
%
%PURPOSE: To analyze individual sessions from auditory discrimination task.
%
%AUTHOR: MJ Siniscalchi, 190627
%
%TO DO LIST:
%   -get_lickrate_byTrialType() takes WAY TOO LONG... proofread/optimize code.
%   -Generate diagnostic plots to identify problems with data acquisition or artifacts. 
%--------------------------------------------------------------------------

clearvars;

%% Set paths

% Set paths to analysis code
[data_dir,~,~] = smLearning_setPathList;
% Assign data directories and get experiment-spec parameters
[logfile,path] = uigetfile([data_dir '\*.log'],...
    'Select .LOG file generated by NBS Presentation');

%% Analyze behavior and generate figs

% Parse logfile
logData = parseLogfile(path,logfile);
% Retrieve stimulus, response, and outcome data from each trial
[sessionData, trialData] = flex_getSessionData(logData);
% Generate logical masks for specific trial types
trials = discrim_getTrialMasks(trialData,sessionData.presCodeSet);
stats = calc_ChoiceStats(trials);

mat_file = logfile(1:end-4);
save(fullfile(path, mat_file),'logData','trialData','sessionData','trials','stats');

% Visualize raw behavioral data
time_range = [-2 5];
tlabel = [sessionData.subject{:},'--',sessionData.dateTime{1}];
fig = plot_behByTrial(trialData,trials,tlabel,time_range);
%savefig(fig,fullfile(path,['raw_beh_',mat_file]));
%saveas(fig,fullfile(path,['raw_beh_',mat_file '.png']));

%% Analyse lick statistics and plot
edges = time_range(1):0.1:time_range(2);
output = get_lickrate_byTrialType(trialData,trials,{'hit','err'},edges);
fig = plot_lickrate_overlay(output);
savefig(fig,fullfile(path,['lick_density_',mat_file]));
saveas(fig,fullfile(path,['lick_density_',mat_file '.png']));

%Interlick Intervals
ILIs = get_interLickIntervals(trialData);
fig = plot_interLickIntervals(ILIs);
savefig(fig,fullfile(path,['interlick_intervals_',mat_file]));
saveas(fig,fullfile(path,['interlick_intervals_',mat_file '.png']));